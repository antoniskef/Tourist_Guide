/* LOCATION */
DROP TABLE IF EXISTS LOCATION;
CREATE TABLE LOCATION 
(
	LOCATION_ID integer NOT NULL,
	LOCATION_NAME string NOT NULL,
	ORIENTATION string,
    PRIMARY KEY (LOCATION_ID)
);

/* ACCOMODATION */
DROP TABLE IF EXISTS ACCOMMODATION;
CREATE TABLE ACCOMMODATION 
(
	ID integer PRIMARY KEY AUTOINCREMENT,
	NAME string NOT NULL,
	PRICE string,
	RATING integer,
	ADDRESS string,
	LOCATION_ID integer,
	FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID) ON DELETE SET NULL 
);

DROP TABLE IF EXISTS HOTEL;
CREATE TABLE HOTEL 
(
    ID integer PRIMARY KEY AUTOINCREMENT,
	POOL string,
	BREAKFAST string,
	SPA string,
    FOREIGN KEY (ID) REFERENCES ACCOMODATION(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS APARTMENTS;
CREATE TABLE APARTMENTS
(
	ID integer PRIMARY KEY AUTOINCREMENT,
	ROOMS integer,
    FOREIGN KEY (ID) REFERENCES ACCOMODATION(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS CAMPING;
CREATE TABLE CAMPING 
(
	ID integer PRIMARY KEY AUTOINCREMENT,
	FREE string,
    FOREIGN KEY (ID) REFERENCES ACCOMODATION(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

/*FOOD AND DRINK*/
DROP TABLE IF EXISTS FOOD_AND_DRINK;
CREATE TABLE FOOD_AND_DRINK 
(
    ID integer PRIMARY KEY AUTOINCREMENT,
	NAME string NOT NULL,
	RATING integer,
	PRICE string,
	ADDRESS string,
	LOCATION_ID integer,
	FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID) ON DELETE SET NULL 
);

DROP TABLE IF EXISTS RESTAURANT;
CREATE TABLE RESTAURANT 
(
    ID integer PRIMARY KEY AUTOINCREMENT,
	TYPE_OF_FOOD string,
    FOREIGN KEY (ID) REFERENCES FOOD_AND_DRINK(ID) ON DELETE CASCADE ON UPDATE CASCADE
); 

DROP TABLE IF EXISTS CAFE;
CREATE TABLE CAFE (
	ID integer PRIMARY KEY AUTOINCREMENT,
	BOARD_GAMES string,
    FOREIGN KEY (ID) REFERENCES FOOD_AND_DRINK(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS CLUB;
CREATE TABLE CLUB (
	ID integer PRIMARY KEY AUTOINCREMENT,
	TYPE_OF_MUSIC string,
    FOREIGN KEY (ID) REFERENCES FOOD_AND_DRINK(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS BAR;
CREATE TABLE BAR (
	ID integer PRIMARY KEY AUTOINCREMENT,
	TYPE_OF_MUSIC string,
    FOREIGN KEY (ID) REFERENCES FOOD_AND_DRINK(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

/* ACTIVITIES */
DROP TABLE IF EXISTS ACTIVITY;
CREATE TABLE ACTIVITY (
	ID integer PRIMARY KEY AUTOINCREMENT,
	NAME string NOT NULL,
	PRICE string,
	LOCATION_ID integer,
	FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID) ON DELETE SET NULL 
);

DROP TABLE IF EXISTS CINEMA;
CREATE TABLE CINEMA (
	ID integer PRIMARY KEY AUTOINCREMENT,
	SUMMER string,
	FOREIGN KEY (ID) REFERENCES ACTIVITY(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS FESTIVAL_CONCERT;
CREATE TABLE FESTIVAL_CONCERT (
	ID integer PRIMARY KEY AUTOINCREMENT,
	ARTIST string,
	FOREIGN KEY (ID) REFERENCES ACTIVITY(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS WATER_SPORTS;
CREATE TABLE WATER_SPORTS (
	ID integer PRIMARY KEY AUTOINCREMENT,
	TUBE string,
	WATER_SKI string,
	SURFING string,
	DIVING string,
	SAILING string,
	FOREIGN KEY (ID) REFERENCES ACTIVITY(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

/* SERVICES */
DROP TABLE IF EXISTS SERVICES;
CREATE TABLE SERVICES (
	ID integer PRIMARY KEY AUTOINCREMENT,
	NAME string,
	TEL_NUMBER integer,
	ADDRESS string,
	OPENING_HOURS string,
	LOCATION_ID integer,
	FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID) ON DELETE SET NULL 
);

DROP TABLE IF EXISTS POLICE_STATION;
CREATE TABLE POLICE_STATION (
	ID integer PRIMARY KEY AUTOINCREMENT,
	FAX integer,
	FOREIGN KEY (ID) REFERENCES SERVICES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS DOCTOR;
CREATE TABLE DOCTOR (
	ID integer PRIMARY KEY AUTOINCREMENT,
	SPECIALITY string,
	FOREIGN KEY (ID) REFERENCES SERVICES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS HOSPITAL;
CREATE TABLE HOSPITAL (
	ID integer PRIMARY KEY AUTOINCREMENT,
	PUBLIC string,
	FOREIGN KEY (ID) REFERENCES SERVICES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS RENTAL_CARS;
CREATE TABLE RENTAL_CARS (
	ID integer PRIMARY KEY AUTOINCREMENT,
	RATING integer,
	PRICE string,
	NUM_CARS integer,
	FOREIGN KEY (ID) REFERENCES SERVICES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS SHIP_TICKET_AGENCY;
CREATE TABLE SHIP_TICKET_AGENCY (
	ID integer PRIMARY KEY AUTOINCREMENT,
	PRICE string,
	FOREIGN KEY (ID) REFERENCES SERVICES(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

/* TRANSPORTATION */
DROP TABLE IF EXISTS TRANSPORTATION;
CREATE TABLE TRANSPORTATION (
	ID integer PRIMARY KEY AUTOINCREMENT,
	NAME string,
	LOCATION_ID integer,
	FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID) ON DELETE SET NULL 
);

DROP TABLE IF EXISTS TAXI;
CREATE TABLE TAXI (
	ID integer PRIMARY KEY AUTOINCREMENT,
	TEL_NUMBER integer,
	FOREIGN KEY (ID) REFERENCES TRANSPORTATION(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS BUS;
CREATE TABLE BUS (
	ID integer PRIMARY KEY AUTOINCREMENT,
	INTERMEDIATE_STOP string,
	FINAL_STOP string,
	TIME_OF_DEPARTURE string,
	FOREIGN KEY (ID) REFERENCES TRANSPORTATION(ID) ON DELETE CASCADE ON UPDATE CASCADE
);

/* BEACH */
DROP TABLE IF EXISTS BEACH;
CREATE TABLE BEACH (
	ID integer PRIMARY KEY AUTOINCREMENT,
	NAME string,
	ORGANISED string,
	TYPE string,
	PRICE string,
	LOCATION_ID integer,
	FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID) ON DELETE SET NULL 
);

/* SIGHTSEEING */
DROP TABLE IF EXISTS SIGHTSEEING;
CREATE TABLE SIGHTSEEING (
	ID integer PRIMARY KEY AUTOINCREMENT,
	NAME string,
	RATING integer,
	OPENING_HOURS string,
	PRICE string,
	TYPE string,
	LOCATION_ID integer,
	FOREIGN KEY (LOCATION_ID) REFERENCES LOCATION(LOCATION_ID) ON DELETE SET NULL 
);

/* 	TOURIST */
DROP TABLE IF EXISTS TOURIST;
CREATE TABLE TOURIST (
	ID integer PRIMARY KEY AUTOINCREMENT,
	NAME string,
	PASSWORD string
);

CREATE INDEX NAME_INDEX ON TOURIST(NAME);

/* FAVOURITES */
DROP TABLE IF EXISTS FAV_TRANSPORTATION;
CREATE TABLE FAV_TRANSPORTATION (
	ID integer,
	NAME string,
	TOURIST_ID integer,
	PRIMARY KEY (ID, TOURIST_ID),
	FOREIGN KEY (ID) REFERENCES TRANSPORTATION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (TOURIST_ID) REFERENCES TOURIST(ID) ON DELETE CASCADE ON UPDATE CASCADE 
);

DROP TABLE IF EXISTS FAV_FOOD_AND_DRINK;
CREATE TABLE FAV_FOOD_AND_DRINK (
	ID integer,
	NAME string,
	TOURIST_ID integer,
	PRIMARY KEY (ID, TOURIST_ID),
	FOREIGN KEY (ID) REFERENCES FOOD_AND_DRINK(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (TOURIST_ID) REFERENCES TOURIST(ID) ON DELETE CASCADE ON UPDATE CASCADE 
);

DROP TABLE IF EXISTS FAV_BEACH;
CREATE TABLE FAV_BEACH (
	ID integer,
	NAME string,
	TOURIST_ID integer,
	PRIMARY KEY (ID, TOURIST_ID),
	FOREIGN KEY (ID) REFERENCES BEACH(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (TOURIST_ID) REFERENCES TOURIST(ID) ON DELETE CASCADE ON UPDATE CASCADE 
);

DROP TABLE IF EXISTS FAV_SERVICES;
CREATE TABLE FAV_SERVICES (
	ID integer,
	NAME string,
	TOURIST_ID integer,
	PRIMARY KEY (ID, TOURIST_ID),
	FOREIGN KEY (ID) REFERENCES SERVICES(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (TOURIST_ID) REFERENCES TOURIST(ID) ON DELETE CASCADE ON UPDATE CASCADE 
);

DROP TABLE IF EXISTS FAV_ACCOMMODATION;
CREATE TABLE FAV_ACCOMMODATION (
	ID integer,
	NAME string,
	TOURIST_ID integer,
	PRIMARY KEY (ID, TOURIST_ID),
	FOREIGN KEY (ID) REFERENCES ACCOMMODATION(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (TOURIST_ID) REFERENCES TOURIST(ID) ON DELETE CASCADE ON UPDATE CASCADE 
);

DROP TABLE IF EXISTS FAV_SIGHTSEEING;
CREATE TABLE FAV_SIGHTSEEING (
	ID integer,
	NAME string,
	TOURIST_ID integer,
	PRIMARY KEY (ID, TOURIST_ID),
	FOREIGN KEY (ID) REFERENCES SIGHTSEEING(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (TOURIST_ID) REFERENCES TOURIST(ID) ON DELETE CASCADE ON UPDATE CASCADE 
);

DROP TABLE IF EXISTS FAV_ACTIVITY;
CREATE TABLE FAV_ACTIVITY (
	ID integer,
	NAME string,
	TOURIST_ID integer,
	PRIMARY KEY (ID, TOURIST_ID),
	FOREIGN KEY (ID) REFERENCES ACTIVITY(ID) ON DELETE CASCADE ON UPDATE CASCADE,
	FOREIGN KEY (TOURIST_ID) REFERENCES TOURIST(ID) ON DELETE CASCADE ON UPDATE CASCADE 
);

